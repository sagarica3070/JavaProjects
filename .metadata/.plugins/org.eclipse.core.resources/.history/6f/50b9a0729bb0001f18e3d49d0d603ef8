package com.example.order_service.service;

import java.util.ArrayList;
import java.util.List;
import java.util.UUID;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.web.reactive.function.client.WebClient;

import com.example.order_service.dto.OrderLineItemsDto;
import com.example.order_service.dto.OrderRequest;
import com.example.order_service.entity.Order;
import com.example.order_service.entity.OrderLineItems;
import com.example.order_service.repository.OrderRepository;

import jakarta.transaction.Transactional;

@Service
@Transactional
public class OrderService {

	
	@Autowired
	OrderRepository orderRepository;
	
	@Autowired
	WebClient webClient; 
	
	public void placeOrder(OrderRequest orderRequest) {
		Order order = new Order();
		order.setOrderNumber(UUID.randomUUID().toString());
//		List<OrderLineItems> orderLineItems = orderRequest.getOrderLineItemsDto().stream()
//				.map(orderLineItemDto -> maptoDto(orderLineItemDto)).toList();
//		order.setOrderLineItemsList(orderLineItems);
//		
		
		
	List<OrderLineItems> list= new ArrayList<>();
	for (OrderLineItemsDto ol : orderRequest.getOrderLineItemsDto()) {
		
		OrderLineItems oli = new OrderLineItems();
		oli.setPrice(ol.getPrice());
		oli.setSkuCode(ol.getSkuCode());
		oli.setQuantity(ol.getQuantity());
		//oli.setPrice(null);
		
		list.add(oli);
		
	}	
	order.setOrderLineItemsList(list);
		
	
	//make a get call to the inventory service to check if the products exists in the inventory;

	Boolean result = webClient.get().uri("http://localhost:8092/api/inventory").retrieve().bodyToMono(Boolean.class)
			.block();

	if (result) {
		orderRepository.save(order);
	} else {

		throw new IllegalArgumentException("Product is not in stock, please try again later");
	}
}
	public OrderLineItems maptoDto(OrderLineItemsDto orderLineItemsDto) {
		OrderLineItems orderLineItems = new OrderLineItems();
		orderLineItems.setPrice(orderLineItemsDto.getPrice());
		orderLineItems.setQuantity(orderLineItemsDto.getQuantity());
		orderLineItems.setSkuCode(orderLineItemsDto.getSkuCode());
		return orderLineItems;
	}
}


